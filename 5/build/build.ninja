# This is the build file for project "irg"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.5.1

# Rules for compiling.

rule c_COMPILER
 command = cc $ARGS -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Compiling C object $out

rule cpp_COMPILER
 command = c++ $ARGS -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Compiling C++ object $out

# Rules for linking.

rule cpp_LINKER
 command = c++ $ARGS -o $out $in $LINK_ARGS
 description = Linking target $out

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule REGENERATE_BUILD
 command = /usr/bin/meson --internal regenerate /home/_w/Documents/Projects/Fer/6/IRG/5 /home/_w/Documents/Projects/Fer/6/IRG/5/build --backend ninja
 description = Regenerating build files.
 generator = 1

# Phony build target, always out of date

build PHONY: phony 

# Build rules for targets

build asset-copy: phony meson-asset-copy

build meson-asset-copy: CUSTOM_COMMAND 
 COMMAND = /usr/bin/meson --internal commandrunner /home/_w/Documents/Projects/Fer/6/IRG/5 /home/_w/Documents/Projects/Fer/6/IRG/5/build '' /usr/bin/meson cp -r /home/_w/Documents/Projects/Fer/6/IRG/5/textures /home/_w/Documents/Projects/Fer/6/IRG/5/shaders /home/_w/Documents/Projects/Fer/6/IRG/5/objects /home/_w/Documents/Projects/Fer/6/IRG/5/build
 description = Running$ external$ command$ asset-copy
 pool = console

build main.out@exe/main.cpp.o: cpp_COMPILER ../main.cpp
 DEPFILE = main.out@exe/main.cpp.o.d
 ARGS = -Imain.out@exe -I. -I.. -I../../include -I/usr/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++17

build main.out@exe/.._src_glad_glad.c.o: c_COMPILER ../../src/glad/glad.c
 DEPFILE = main.out@exe/.._src_glad_glad.c.o.d
 ARGS = -Imain.out@exe -I. -I.. -I../../include -I/usr/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64

build main.out@exe/.._src_stb_image.cpp.o: cpp_COMPILER ../../src/stb_image.cpp
 DEPFILE = main.out@exe/.._src_stb_image.cpp.o.d
 ARGS = -Imain.out@exe -I. -I.. -I../../include -I/usr/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++17

build main.out@exe/.._src_irg_common.cpp.o: cpp_COMPILER ../../src/irg/common.cpp
 DEPFILE = main.out@exe/.._src_irg_common.cpp.o.d
 ARGS = -Imain.out@exe -I. -I.. -I../../include -I/usr/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++17

build main.out@exe/.._src_irg_keyboard.cpp.o: cpp_COMPILER ../../src/irg/keyboard.cpp
 DEPFILE = main.out@exe/.._src_irg_keyboard.cpp.o.d
 ARGS = -Imain.out@exe -I. -I.. -I../../include -I/usr/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++17

build main.out@exe/.._src_irg_mouse.cpp.o: cpp_COMPILER ../../src/irg/mouse.cpp
 DEPFILE = main.out@exe/.._src_irg_mouse.cpp.o.d
 ARGS = -Imain.out@exe -I. -I.. -I../../include -I/usr/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++17

build main.out@exe/.._src_irg_primitive.cpp.o: cpp_COMPILER ../../src/irg/primitive.cpp
 DEPFILE = main.out@exe/.._src_irg_primitive.cpp.o.d
 ARGS = -Imain.out@exe -I. -I.. -I../../include -I/usr/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++17

build main.out@exe/.._src_irg_shape.cpp.o: cpp_COMPILER ../../src/irg/shape.cpp
 DEPFILE = main.out@exe/.._src_irg_shape.cpp.o.d
 ARGS = -Imain.out@exe -I. -I.. -I../../include -I/usr/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++17

build main.out@exe/.._src_irg_texture.cpp.o: cpp_COMPILER ../../src/irg/texture.cpp
 DEPFILE = main.out@exe/.._src_irg_texture.cpp.o.d
 ARGS = -Imain.out@exe -I. -I.. -I../../include -I/usr/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++17

build main.out@exe/.._src_irg_window.cpp.o: cpp_COMPILER ../../src/irg/window.cpp
 DEPFILE = main.out@exe/.._src_irg_window.cpp.o.d
 ARGS = -Imain.out@exe -I. -I.. -I../../include -I/usr/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++17

build main.out@exe/.._src_irg_camera.cpp.o: cpp_COMPILER ../../src/irg/camera.cpp
 DEPFILE = main.out@exe/.._src_irg_camera.cpp.o.d
 ARGS = -Imain.out@exe -I. -I.. -I../../include -I/usr/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++17

build main.out: cpp_LINKER main.out@exe/main.cpp.o main.out@exe/.._src_glad_glad.c.o main.out@exe/.._src_stb_image.cpp.o main.out@exe/.._src_irg_common.cpp.o main.out@exe/.._src_irg_keyboard.cpp.o main.out@exe/.._src_irg_mouse.cpp.o main.out@exe/.._src_irg_primitive.cpp.o main.out@exe/.._src_irg_shape.cpp.o main.out@exe/.._src_irg_texture.cpp.o main.out@exe/.._src_irg_window.cpp.o main.out@exe/.._src_irg_camera.cpp.o | /usr/lib/libdl.a /usr/lib/libdl-2.31.so /usr/lib/libOpenGL.so /usr/lib/libglfw.so
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined -Wl,--start-group /usr/lib/libOpenGL.so /usr/lib/libglfw.so -ldl -Wl,--end-group

# Test rules

build meson-test: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build test: phony meson-test

build meson-benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

build benchmark: phony meson-benchmark

# Install rules

build meson-install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /usr/bin/meson install --no-rebuild
 pool = console

build install: phony meson-install

build meson-dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /usr/bin/meson dist
 pool = console

build dist: phony meson-dist

# Suffix

build meson-scan-build: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal scanbuild /home/_w/Documents/Projects/Fer/6/IRG/5 /home/_w/Documents/Projects/Fer/6/IRG/5/build /usr/bin/meson
 pool = console

build scan-build: phony meson-scan-build

build meson-ctags: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal tags ctags /home/_w/Documents/Projects/Fer/6/IRG/5
 pool = console

build ctags: phony meson-ctags

build meson-uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal uninstall
 pool = console

build uninstall: phony meson-uninstall

build all: phony main.out

build clean: phony meson-clean

build meson-clean: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/ninja -t clean
 description = Cleaning

build build.ninja: REGENERATE_BUILD ../meson.build meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../meson.build meson-private/coredata.dat: phony 

default all

